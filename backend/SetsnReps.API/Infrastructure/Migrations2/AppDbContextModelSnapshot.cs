// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SetsnReps.API.Infrastructure;

#nullable disable

namespace SetsnReps.Api.Infrastructure.Migrations2
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SetsnReps.Core.Models.Exercise.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Exercise.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrimaryMuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUri")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("PrimaryMuscleGroupId");

                    b.ToTable("Exercises", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Exercise.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Training.ExecutedWorkout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("WeightVolume")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkoutRoutineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutRoutineId");

                    b.ToTable("ExecutedWorkouts");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.ExerciseSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Reps")
                        .HasColumnType("int");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<Guid>("WorkoutExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("ExerciseSets", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutExercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RestTime")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkoutRoutineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutRoutineId");

                    b.ToTable("WorkoutExercises", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutRoutine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkoutRoutineSetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutRoutineSetId");

                    b.ToTable("WorkoutRoutines", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutRoutineSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkoutRoutineSets", (string)null);
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Exercise.Exercise", b =>
                {
                    b.HasOne("SetsnReps.Core.Models.Exercise.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SetsnReps.Core.Models.Exercise.MuscleGroup", "PrimaryMuscleGroup")
                        .WithMany()
                        .HasForeignKey("PrimaryMuscleGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("PrimaryMuscleGroup");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Training.ExecutedWorkout", b =>
                {
                    b.HasOne("SetsnReps.Core.Models.Workout.WorkoutRoutine", "WorkoutRoutine")
                        .WithMany()
                        .HasForeignKey("WorkoutRoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutRoutine");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.ExerciseSet", b =>
                {
                    b.HasOne("SetsnReps.Core.Models.Workout.WorkoutExercise", "WorkoutExercise")
                        .WithMany("ExerciseSets")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutExercise");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutExercise", b =>
                {
                    b.HasOne("SetsnReps.Core.Models.Workout.WorkoutRoutine", "WorkoutRoutine")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutRoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutRoutine");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutRoutine", b =>
                {
                    b.HasOne("SetsnReps.Core.Models.Workout.WorkoutRoutineSet", "WorkoutRoutineSet")
                        .WithMany("WorkoutRoutines")
                        .HasForeignKey("WorkoutRoutineSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutRoutineSet");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutExercise", b =>
                {
                    b.Navigation("ExerciseSets");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutRoutine", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("SetsnReps.Core.Models.Workout.WorkoutRoutineSet", b =>
                {
                    b.Navigation("WorkoutRoutines");
                });
#pragma warning restore 612, 618
        }
    }
}
